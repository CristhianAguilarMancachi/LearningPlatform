spring.application.name=edge-server
server.port=8080

# Eureka client
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Gateway discovery locator: will create routes based on serviceId discovered in Eureka
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Static route examples (in addition to discovery locator)
spring.cloud.gateway.routes[0].id=usuarios-route
spring.cloud.gateway.routes[0].uri=lb://USUARIOS
spring.cloud.gateway.routes[0].predicates[0]=Path=/ms-usuarios/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

# Swagger / OpenAPI proxy for usuarios (so you can access api-docs through the gateway)
spring.cloud.gateway.routes[1].id=usuarios-apidocs
spring.cloud.gateway.routes[1].uri=lb://USUARIOS
spring.cloud.gateway.routes[1].predicates[0]=Path=/ms-usuarios/api-docs/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/ms-usuarios/api-docs/(?<segment>.*),/api-docs/${segment}

# Expose actuator endpoints (including gateway routes for troubleshooting)
management.endpoints.web.exposure.include=health,info,gateway
management.endpoint.gateway.enabled=true

# Logging
logging.level.org.springframework.cloud.gateway=INFO
